"""change models to support json and biginteger

Revision ID: cd1369a4b2d4
Revises: 26b0905c786c
Create Date: 2024-07-20 12:10:32.731506

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "cd1369a4b2d4"
down_revision: Union[str, None] = "26b0905c786c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TABLE data ALTER COLUMN value TYPE JSON USING value::json")
    op.alter_column(
        "data",
        "value",
        existing_type=sa.VARCHAR(length=512),
        type_=sa.JSON(),
        existing_nullable=False,
    )
    op.alter_column(
        "data",
        "timestamp",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
    )
    op.create_unique_constraint(None, "data", ["id"])
    op.create_unique_constraint(None, "signal", ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "signal", type_="unique")
    op.drop_constraint(None, "data", type_="unique")
    op.alter_column(
        "data",
        "timestamp",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
    )
    op.alter_column(
        "data",
        "value",
        existing_type=sa.JSON(),
        type_=sa.VARCHAR(length=512),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
